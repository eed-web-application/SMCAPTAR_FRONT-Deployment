name: Build Test And Create
on:
  workflow_call:
    secrets:
      token:
        required: false
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GH_TOKEN: ${{ secrets.TRIGGER_WORFLOW_SECRET}}
jobs:
    build-docker-images:
      name: Build and Publish Docker Image
      runs-on: ubuntu-latest
      outputs:
        IMAGE_TO_DEPLOY: ${{ steps.meta.outputs.tags }}
      steps:
         - uses: actions/checkout@v3
         - name: Build the Docker image
           run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
         - name: Docker Metadata
            id: meta
            uses: docker/metadata-action@v4
            with:
              # list of Docker images to use as base name for tags
              images: ${{env.REGISTRY }}/${{ env.IMAGE_NAME }}
              # generate Docker tags based on the following events/attributes
              tags: |
                type=sha
              labels: |
                maintainer=seano@slac.stanford.edu
          - name: Build and push Docker image
            uses: docker/build-push-action@v4
            id: build_and_push
            with:
              context: .
              file: ./Dockerfile
              platforms: |
                linux/amd64
                linux/arm64/v8
              provenance: false
              push: true
              tags: ${{ steps.meta.outputs.tags }}
              labels: ${{ steps.meta.outputs.labels }}
    deploy:
      name: Start Deployment
      runs-on: ubuntu-latest
      needs: build-docker-images
      steps:
        - run: |
            gh workflow --repo slaclab/SMCAPTAR_FRONT-Deployment run Deployment -f deployment_image="${{needs.build-docker-images.outputs.IMAGE_TO_DEPLOY}} "
          env:
            GITHUB_TOKEN: ${{ secrets.TRIGGER_WORFLOW_SECRET}}
